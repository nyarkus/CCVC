// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Schemes.CV
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ConsoleVideo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_12_23(); }
  public static ConsoleVideo GetRootAsConsoleVideo(ByteBuffer _bb) { return GetRootAsConsoleVideo(_bb, new ConsoleVideo()); }
  public static ConsoleVideo GetRootAsConsoleVideo(ByteBuffer _bb, ConsoleVideo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ConsoleVideo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double Fps { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public byte Sound(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(__p.__vector(o) + j * 1) : (byte)0; }
  public int SoundLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSoundBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetSoundBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetSoundArray() { return __p.__vector_as_array<byte>(6); }
  public string Frames(int j) { int o = __p.__offset(8); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int FramesLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Schemes.CV.ConsoleVideo> CreateConsoleVideo(FlatBufferBuilder builder,
      double fps = 0.0,
      VectorOffset soundOffset = default(VectorOffset),
      VectorOffset framesOffset = default(VectorOffset)) {
    builder.StartTable(3);
    ConsoleVideo.AddFps(builder, fps);
    ConsoleVideo.AddFrames(builder, framesOffset);
    ConsoleVideo.AddSound(builder, soundOffset);
    return ConsoleVideo.EndConsoleVideo(builder);
  }

  public static void StartConsoleVideo(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddFps(FlatBufferBuilder builder, double fps) { builder.AddDouble(0, fps, 0.0); }
  public static void AddSound(FlatBufferBuilder builder, VectorOffset soundOffset) { builder.AddOffset(1, soundOffset.Value, 0); }
  public static VectorOffset CreateSoundVector(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSoundVectorBlock(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSoundVectorBlock(FlatBufferBuilder builder, ArraySegment<byte> data) { builder.StartVector(1, data.Count, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSoundVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<byte>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSoundVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static void AddFrames(FlatBufferBuilder builder, VectorOffset framesOffset) { builder.AddOffset(2, framesOffset.Value, 0); }
  public static VectorOffset CreateFramesVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateFramesVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFramesVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFramesVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartFramesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Schemes.CV.ConsoleVideo> EndConsoleVideo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Schemes.CV.ConsoleVideo>(o);
  }
}


static public class ConsoleVideoVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Fps*/, 8 /*double*/, 8, false)
      && verifier.VerifyVectorOfData(tablePos, 6 /*Sound*/, 1 /*byte*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 8 /*Frames*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
